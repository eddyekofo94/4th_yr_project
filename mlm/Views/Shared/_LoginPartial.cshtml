@using Microsoft.AspNetCore.Identity
@using mlm.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">

        <ul class="navbar navbar-nav navbar-expand-lg navbar-dark navbar-expand-lg navbar-custom bg-dark">
            <li>
                <a asp-area="" class="nav-link" asp-controller="Home" asp-action="Message">Message</a>
            </li>
            <li>
                <a class="nav-link" asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-outline-warning my-2 my-sm-0 nav-link">Log out</button>
            </li>
        </ul>
    </form>
    <form  asp-controller="Search" asp-action="SearchUser" class="form-inline my-2 my-lg-0">
        <input name="SearchString" class="form-control mr-sm-2" type="text" placeholder="Search">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
}
else
{
    <ul class="navbar navbar-nav">

        <li>
            <a asp-area="" class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li>
            <a asp-area="" class="btn btn-outline-success my-2 my-sm-0" asp-controller="Account" asp-action="Login">Log in</a>
        </li>
    </ul>
}